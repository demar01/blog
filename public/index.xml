<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Maria Dermit</title>
    <link>/blog/</link>
    <description>Recent content in Blog on Maria Dermit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 26 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spotify</title>
      <link>/blog/2020_06_26_spotify/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020_06_26_spotify/</guid>
      <description>library(dplyr) library(spotifyr) library(plotly) library(ggplot2) library(ggjoy) library(ggpubr) library(rstatix) library(wesanderson) library(GGally) Motivation to do this comparison It is always a joke in my lab that Martin listens to better music than what I do. I find this utterly non-sense! To demonstrate my point, I analyse two artist Martin and I really like: on my case Rosalia and on Martin’s case The bouncing Souls. I took this information from his lab Spotify playlist.</description>
    </item>
    
    <item>
      <title>BJ_TL</title>
      <link>/blog/2020_06_24_ukgoverment_message/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020_06_24_ukgoverment_message/</guid>
      <description>UK goverment messages In order to know what messages are being twitted by UK’s PM I analysed his timeline. Reporting the most recent 3,200 statuses, it is clear that the number of Brexit messages out-passes Covid-related tweets.
bj &amp;lt;- get_timeline(&amp;quot;BorisJohnson&amp;quot;, n = 3200) m&amp;lt;-bj %&amp;gt;% filter(is_retweet==&amp;quot;FALSE&amp;quot;) %&amp;gt;% pull(hashtags)%&amp;gt;% unlist() %&amp;gt;% table() %&amp;gt;% names() v&amp;lt;-bj %&amp;gt;% filter(is_retweet==&amp;quot;FALSE&amp;quot;) %&amp;gt;% pull(hashtags)%&amp;gt;% unlist() %&amp;gt;% table() %&amp;gt;% as.numeric() d&amp;lt;-data.frame(m,v) %&amp;gt;% arrange(v) wordcloud(words = d$m, freq = d$v, min.</description>
    </item>
    
    <item>
      <title>Dataviz</title>
      <link>/blog/2020_06_21_dataviz/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020_06_21_dataviz/</guid>
      <description>FANTASTIC talk on DataViz I did not attend to rstudioconf-2020, but I engaged the #rstudioconf2020 watch many of the talks. One of them I particularly loved was “The glamour of Graphic” by Will Chase. As he sayed in his talk, once you learnt certain things, you cannot stop noticing where those amazing trick are not being used, and I find this to be so true for dataviz!
I start from the premise that any plotting should be done with ggplot2.</description>
    </item>
    
    <item>
      <title>Rblogdown</title>
      <link>/blog/2015-06-22-r-rmarkdown/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015-06-22-r-rmarkdown/</guid>
      <description>How I set up this website The purpose of this post is to show the simple steps how I created this website using Github, Hugo, Rblogdown and Netfily.
First I create a new repo on my GitHub
 Then I downloaded Hugo, a static site generator and got familiar with the way the information is distributed across folders. I also realise how important choosing the right theme for your purpose is.</description>
    </item>
    
  </channel>
</rss>